plugins {
    id "org.sonarqube" version "2.6.2"
}

apply plugin: 'java'
apply plugin: 'maven'

group = 'de.kgrupp'
def versionStr = System.properties['inoks.java.utils.version']
version = !versionStr ? "LOCAL-VERSION" : versionStr

sourceCompatibility = 1.8

repositories {
    maven {
        url "http://localhost:8081/repository/maven-public/"
    }
    mavenCentral()
}

dependencies {
    compile group: 'de.kgrupp', name: 'inoks-java-monads', version: '0.4.0.1'

    compile group: 'org.jetbrains', name: 'annotations', version: '15.0'

    compile 'javax.xml.bind:jaxb-api:2.2.11'
    compile 'com.sun.xml.bind:jaxb-core:2.2.11'
    compile 'com.sun.xml.bind:jaxb-impl:2.2.11'
    compile 'javax.activation:activation:1.1.1'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.4.0'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: '2.9.6'

    compileOnly 'org.projectlombok:lombok:1.18.0'
    testCompileOnly 'org.projectlombok:lombok:1.18.0'

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.2.0'
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.2.0'
}

allprojects {
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(Test) {
        systemProperty "file.encoding", "UTF-8"
    }
}

test {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'inoks-java-utils'
        property 'sonar.projectName', 'inoks-java-utils'
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

def nexusUrl = project.hasProperty('nexusUrl') ? nexusUrl : 'http://localhost:8081'
def nexusUser = project.hasProperty('nexusUsername') ? nexusUsername : 'admin'
def nexusPw = project.hasProperty('nexusPassword') ? nexusPassword : 'admin123'

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${nexusUrl}/repository/maven-releases/") {
                authentication(userName: nexusUser, password: nexusPw)
            }
            snapshotRepository(url: "${nexusUrl}/repository/maven-snapshots") {
                authentication(userName: nexusUser, password: nexusPw)
            }
        }
    }
}